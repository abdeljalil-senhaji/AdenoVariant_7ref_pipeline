import codecs
from time import gmtime, strftime
import pandas as pd
#from multiqc.plots import table




workdir: config["general_path"]["OUTPUT_PATH"]
input_path = config["general_path"]["INPUT_PATH"]
output_path = config["general_path"]["OUTPUT_PATH"]


sample_ids = []
sampleName=glob.glob("/scratch/recherche/asenhaji/v4.1_pipe_adeno_7ref/data/*.fastq.gz")
for name in sampleName:
    path = input_path + "/"
    name = name.replace(path, '')
    a = re.split('/', name)
    name = a[0]
    name = name.replace('_R1_001.fastq.gz', '')
    name = name.replace('_R2_001.fastq.gz', '')
    sample_ids.append(name)


ref_ids = ["HAdVrefA",  "HAdVrefB",  "HAdVrefC", "HAdVrefD", "HAdVrefE", "HAdVrefF", "HAdVrefG"]



rule multiqc:
    input:
        #fastq_R1 = expand(output_path+"/multiqc/{sample}/{sample}_R1_cleaned_fastqc.html", sample=sample_ids),
        #fastq_R2 = expand(output_path+"/multiqc/{sample}/{sample}_R2_cleaned_fastqc.html", sample=sample_ids),
        flagstat = expand(output_path+"/multiqc/{sample}/{ref_id}/{ref_id}_{sample}_flagstats.txt", sample = sample_ids, ref_id = ref_ids), 
        #idxstats = expand(output_path+"/multiqc/{sample}/{sample}_idxstat.tabular", sample=sample_ids),
        stats =  expand(output_path+"/multiqc/{sample}/{ref_id}/{ref_id}_{sample}_stats.txt", sample = sample_ids, ref_id = ref_ids),
        #csvs = expand(output_path+"/multiqc/{sample}/{sample}.csv", sample=sample_ids),
        #hs_metrics = expand(output_path+"/multiqc/{sample}/{sample}_HS_metrics.txt", sample=sample_ids)
        pileup = expand(output_path+"/multiqc/{sample}/{ref_id}/{ref_id}_{sample}_coverage.txt", sample=sample_ids, ref_id = ref_ids)
    output:
        "{prefix}/multiqc/results/multiqc_report.html"
    log:
        "{prefix}/multiqc/results/multiqc.log"
    params:
        multiqc_options = config["multiqc"]["OPTIONS"]
        coverage = "{pileup}/input.txt"
    run:
        ############ config file ###################
        f = codecs.open(output_path+"/multiqc/results/report.config", "w", encoding='utf-8')
        f.write('title: "AP-HP report"\n')
        f.write(strftime('intro_text: "%Y-%m-%d %H:%M:%S"\n', gmtime()))
        f.write('custom_logo: "/data/snakemake/logo_aphp.png"\n')
        f.write('custom_logo_url: "https://www.aphp.fr/"\n')
        f.write('custom_logo_title: "AP-HP"\n\n')
        f.write('report_header_info:\n')
        f.write('    - RÃ©alisation : "Service virologie SL (AP-HP)"\n')
        f.write('    - Mail contact : "abdeljalil.senhajirachik@aphp.fr"\n\n')
        f.write('decimalPoint_format: ","\n')
        f.write('thousandsSep_format: ""\n\n')
        f.write('module_order:\n')
        f.write('    - "general_stats"\n')
        f.write('    - "fastqc"\n')
        f.write('    - "samtools"\n')
        f.write('    - "snpeff"\n')
        f.close()
        ###############table_covrage###############
        df = pd.read_csv(output_path+"/multiqc/results/{wildcards.sample}/{wildcards.ref_id}/.........., sep='\t')
        table_plot = table.plot(df, 'My Table')
        multiqc.add_section(
         name='My Table Section',
         anchor='my-table-section',
         description='This is my table',
         helptext='More information about my table',
         plot=table_plot
        )
        f = codecs.open(output_path+"/multiqc/results/report.config", "a", encoding='utf-8')
        f.write('table_data: "{input.pileup}"\n')
        f.close()
        ############## end #############
        #shell('multiqc -f -o {output} {input}/ 2>&1 | tee -a {log}')
        shell('multiqc -c {output_path}/multiqc/results/report.config -f -o {output_path}/multiqc/results/ {output_path}/multiqc/ 2>&1 | tee -a {log}')
        
